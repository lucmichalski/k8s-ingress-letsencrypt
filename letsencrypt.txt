Create the CloudFlare DNS issuer
Get your CloudFlare Global API Key from the CloudFlare Dashboard
https://dash.cloudflare.com/
Select Domain
Click Get your API key link
Click View next to Global API Key
Enter your details and pass the I am not a robot challenge and click View
Issue the following to generate your CloudFlare API Key Secret


API_KEY=$(echo -n 3f7c56a1ecfe4643a2adf16eddce92f40b1fa7 | base64 -)
cat <<EOF | kubectl apply -f -
---
apiVersion: v1
kind: Secret
metadata:
  name: cloudflare-api-key
  namespace: cert-manager
type: Opaque
data:
  api-key.txt: ${API_KEY}
EOF

EMAIL_ADDRESS="cyphercrypt.tech@gmail.com"
cat <<EOF | kubectl apply -f -
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: ClusterIssuer
metadata:
  name: letsencrypt
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: ${EMAIL_ADDRESS}
    privateKeySecretRef:
      name: letsencrypt
    dns01:
      providers:
      - name: cf-dns
        cloudflare:
          email: ${EMAIL_ADDRESS}
          apiKeySecretRef:
            name: cloudflare-api-key
            key: api-key.txt
EOF


DOMAIN_NAME="kube.cyphercrypttech.com"
cat <<EOF | kubectl apply -f -
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: $(echo $DOMAIN_NAME | tr . -)
  namespace: kube-system
spec:
  secretName: $(echo $DOMAIN_NAME | tr . -)
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
  commonName: '${DOMAIN_NAME}'
  dnsNames:
  - ${DOMAIN_NAME}
  acme:
    config:
    - dns01:
        provider: cf-dns
      domains:
        - ${DOMAIN_NAME}
EOF

kubectl describe certificate  $(echo $DOMAIN_NAME | tr . -) -n kube-system


apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kube
  annotations:
    kubernetes.io/ingress.class: "nginx"
    # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS" # For https containernonly
    # certmanager.k8s.io/cluster-issuer: "letsencrypt"
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - kube.cyphercrypttech.com
    secretName: kube-cyphercrypttech-com
  rules:
  - host: kube.cyphercrypttech.com
    http:
      paths:
      - path: /
        backend:
          serviceName: nginx
          servicePort: 80


#################################################################################
kubectl delete certificate  $(echo $DOMAIN_NAME | tr . -) -n kube-system
kubectl delete secret  $(echo $DOMAIN_NAME | tr . -) -n kube-system
